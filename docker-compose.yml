version: '3.8'
# mysqlのテーブルやらなんやらを保存するやつ
volumes:
  mysql-volume: 
# 各コンテナの設定
services:
  # phpサーバー
  php:
    build: # Dockerfileで設定する
      context: .
      dockerfile: ./docker/php/Dockerfile
    volumes: # ./src/に入れたファイルが/usr/share/nginx/htmlに同期される。
      - ./src:/usr/share/nginx/html
  # nginxサーバー
  web:
    build: # Dockerfileで設定する
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports: # ポートの設定(後で.envでする)
      - ${WEB_PORT}:80
    depends_on: # 先にphpサーバーを立ち上げる
      - php
    volumes: # ./src/に入れたファイルが/usr/share/nginx/htmlに同期される。
      - ./src/:/usr/share/nginx/html
  # データベースサーバー
  db:
    build: # Dockerfileで設定する
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    ports: # ポートの設定(後で.envでする)
      - ${DB_PORT}:3306
    environment: # ユーザとかパスワードとかの設定(後で.envでする)
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      TZ: 'Asia/Tokyo'
    volumes: # mysqlのテーブルやらなんやらを保存する
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/data:/var/lib/mysql
  # PHPMyAdminサーバー
  phpmyadmin: # デフォルトのままで不都合ないのでDockerHubにあるイメージをそのまま使う
    image: phpmyadmin/phpmyadmin:latest
    environment:
      PMA_HOST: 'db' # ホストはデータベースサーバーのサービス名(26行目)
      PMA_USER: 'root' # デフォルトでログインしているユーザー(今回はルートユーザー)
      PMA_PASSWORD: ${DB_ROOT_PASSWORD} # 上記ユーザーのパスワード(今回はルートユーザーのパスワード)
    ports: # ポートの設定(後で.envでする)
    - ${PMA_PORT}:80
  # メール確認用サーバー
  # とりあえずメールがきちんと送信できたか見たいだけなので、簡単に導入できるMailHogを使っている。
  # 外部にメール送るにはIPアドレスの許可やらその他いろいろ面倒くさいので今回はやらない。
  mailhog:
    image: mailhog/mailhog
    ports: # ポートの設定(後で.envでする)
      - ${MAIL_PORT}:8025
      - "1025:1025"